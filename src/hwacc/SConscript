Import('*')

if env['TARGET_ISA'] == 'arm':
    # SimObject('IOAcc.py')
    SimObject('CommInterface.py')
    SimObject('ComputeUnit.py')
    SimObject('LLVMInterface.py')
    SimObject('NoncoherentDma.py')
    SimObject('StreamDma.py')
    SimObject('CycleCounts.py')
    SimObject('AccCluster.py')
    SimObject('StreamBuffer.py')

    # Source('io_acc.cc')
    Source('comm_interface.cc')
    Source('compute_unit.cc')
    Source('llvm_interface.cc')
    Source('LLVMRead/src/basic_block.cc')
    Source('LLVMRead/src/llvm_types.cc')
    Source('LLVMRead/src/mem_request.cc')
    Source('LLVMRead/src/utilization.cc')
    Source('LLVMRead/src/power_model.cc')
    Source('LLVMRead/src/functional_units.cc')
    Source('dma_write_fifo.cc')
    Source('noncoherent_dma.cc')
    Source('stream_dma.cc')
    Source('LLVMRead/src/instructions.cc')
    Source('LLVMRead/src/registers.cc')
    Source('LLVMRead/src/base_instruction.cc')
    Source('LLVMRead/src/cycle_count.cc')
    Source('acc_cluster.cc')
    Source('stream_buffer.cc')
    Source('stream_port.cc')
    # Source('comm_mem_interface.cc')
    Source('scratchpad_memory.cc')

    DebugFlag('IOAcc')
    DebugFlag('CommInterface')
    DebugFlag('CommInterfaceQueues')
    DebugFlag('ComputeUnit')
    DebugFlag('ComputeNode')
    DebugFlag('ClassDetail')
    DebugFlag('Hardware')
    DebugFlag('LLVMInterface')
    DebugFlag('LLVMRegister')
    DebugFlag('LLVMOp')
    DebugFlag('LLVMParse')
    DebugFlag('LLVMGEP')
    DebugFlag('NoncoherentDma')
    DebugFlag('RuntimeQueues')
    DebugFlag('StreamBuffer')
    DebugFlag('StreamDma')
    DebugFlag('SALAMRuntime')

    CompoundFlag('LLVMRuntime', ['ComputeNode', 'LLVMRegister', 'LLVMOp', 'LLVMParse'])