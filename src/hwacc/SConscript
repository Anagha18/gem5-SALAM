Import('*')

if env['TARGET_ISA'] == 'arm':
    SimObject('IOAcc.py')
    SimObject('CommInterface.py')
    SimObject('ComputeUnit.py')
    SimObject('LLVMInterface.py')
    SimObject('NoncoherentDma.py')
    SimObject('StreamDma.py')

    Source('io_acc.cc')
    Source('comm_interface.cc')
    Source('compute_unit.cc')
    Source('llvm_interface.cc')
    Source('LLVMRead/src/basic_block.cc')
    Source('LLVMRead/src/compute_node.cc')
    Source('LLVMRead/src/operations.cc')
    Source('LLVMRead/src/register.cc')
    Source('LLVMRead/src/llvm_types.cc')
    Source('LLVMRead/src/mem_request.cc')
    Source('LLVMRead/src/utilization.cc')
    Source('LLVMRead/src/power_func.cc')
    Source('dma_write_fifo.cc')
    Source('noncoherent_dma.cc')
    Source('stream_dma.cc')

    DebugFlag('IOAcc')
    DebugFlag('CommInterface')
    DebugFlag('ComputeUnit')
    DebugFlag('LLVMInterface')
    DebugFlag('ComputeNode')
    DebugFlag('LLVMRegister')
    DebugFlag('LLVMOp')
    DebugFlag('LLVMParse')
    DebugFlag('LLVMGEP')
    DebugFlag('Hardware')
    DebugFlag('NoncoherentDma')
    DebugFlag('StreamDma')

    CompoundFlag('LLVMRuntime', ['ComputeNode', 'LLVMRegister', 'LLVMOp', 'LLVMParse'])
